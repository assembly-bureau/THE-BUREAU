{"assets":[{"title":"Python Snippet","id":"bf14a45a-6c95-4479-9335-5d63570367fe","type":"CODE","raw":"import os  \n\nbase_path = \"V:\\0.0 OBSIDIAN MASTER VAULT\\OBSIDIAN MASTER VAULT\\FINAL VAULT\\1.0 Book Projects\"\n  \nchapters = {  \n    \"00 Introduction\": [\"Chapter Outline\", \"Introduction\", \"Main Content\", \"Worksheets\", \"Conclusion\", \"Key Takeaways\", \"Additional Resources\", \"Reflection\"],  \n    \"01 Discover Your Archetype - A Gateway to Personalized Planning\": [\"Chapter Outline\", \"Introduction\", \"Main Content\", \"Worksheets\", \"Conclusion\", \"Key Takeaways\", \"Additional Resources\", \"Reflection\"],  \n    \"02 Additional Personality Assessments - Broadening Your Self-Understanding\": [\"Chapter Outline\", \"Introduction\", \"Main Content\", \"Worksheets\", \"Conclusion\", \"Key Takeaways\", \"Additional Resources\", \"Reflection\"],  \n    # Add additional chapters as needed  \n}  \n  \ndef create_directory(path):  \n    \"\"\"Create a directory if it doesn't exist.\"\"\"  \n    try:  \n        os.makedirs(path, exist_ok=True)  \n        print(f\"Directory created: {path}\")  \n    except Exception as e:  \n        print(f\"Failed to create directory {path}: {e}\")  \n  \ndef create_file(path, filename, content):  \n    \"\"\"Create a file with specified content.\"\"\"  \n    full_path = os.path.join(path, f\"{filename}.md\")  \n    try:  \n        with open(full_path, 'w') as file:  \n            file.write(content)  \n        print(f\"File created: {full_path}\")  \n    except Exception as e:  \n        print(f\"Failed to create file {full_path}: {e}\")  \n  \n# Loop through the chapters and their sections to create the structure  \nfor chapter_title, sections in chapters.items():  \n    chapter_path = os.path.join(base_path, chapter_title)  \n    create_directory(chapter_path)  \n  \n    for section in sections:  \n        section_content = f\"# {section}\\n\\n\"  # Basic Markdown content for the section  \n        create_file(chapter_path, section, section_content)  \n  \nprint(\"Book project structure created successfully.\")\n","language":"py","time":"17 hours ago","created":"2024-02-20T14:17:06.980Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1d71b447-8def-42ef-b3df-0f709f9e674a","created":{"value":"2024-02-20T14:17:07.443Z","readable":"17 hours ago"},"updated":{"value":"2024-02-20T14:17:07.443Z","readable":"17 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"bf14a45a-6c95-4479-9335-5d63570367fe"},"type":"DESCRIPTION","text":"The code snippet creates a directory and file for each chapter in the \"Chapter Outline\" section. It also includes additional chapters as needed, which can be used to generate markdown content of specific sections from an object using","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T14:17:08.569Z"},{"title":"Python Snippet","id":"e79875c0-5f2f-43a7-89c4-6bdbc1d04767","type":"CODE","raw":"def create_markdown_files_from_table(filepath, output_directory):\n    \"\"\"Generates markdown files from table rows.\"\"\"\n    with open(filepath, 'r', encoding='utf-8') as file:\n        lines = file.readlines()\n\n    in_table = False\n    headers = []\n\n    for line in lines:\n        if '---' in line and '|' in line:\n            in_table = True  # Found the table header separator\n            continue\n\n        if in_table and '|' in line:\n            parts = [part.strip() for part in line.split('|') if part.strip()]\n            if not headers:  # Capture headers from the first row of the table\n                headers = parts\n                continue\n\n            if len(parts) == len(headers):  # Ensure row matches headers count\n                filename = parts[0].strip('`').replace('[[', '').replace(']]', '').split('/')[-1] + '.md'\n                content = '\\n'.join([f\"{header}: {part}\" for header, part in zip(headers[1:], parts[1:])])\n                \n                # Ensure the output directory exists\n                os.makedirs(output_directory, exist_ok=True)\n\n                # Write to the markdown file in the specified directory\n                with open(os.path.join(output_directory, filename), 'w', encoding='utf-8') as md_file:\n                    md_file.write(content)\n            else:\n                in_table = False  # End of table\n                \ninput_filepath = r\"V:\\0.0 OBSIDIAN MASTER VAULT\\OBSIDIAN MASTER VAULT\\FINAL VAULT\\Template-Table.md\"\noutput_directory = r\"V:\\0.0 OBSIDIAN MASTER VAULT\\OBSIDIAN MASTER VAULT\\FINAL VAULT\\Templates\"\ncreate_markdown_files_from_table(input_filepath, output_directory)","language":"py","time":"23 hours ago","created":"2024-02-20T08:22:20.232Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4f49aa42-7e5e-4a63-8b20-50e9d7aeae2e","created":{"value":"2024-02-20T08:22:20.639Z","readable":"23 hours ago"},"updated":{"value":"2024-02-20T08:22:20.639Z","readable":"23 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"e79875c0-5f2f-43a7-89c4-6bdbc1d04767"},"type":"DESCRIPTION","text":"This code snippet generates markdown files from a table row. It reads the file, checks if there are any header separator in each line and writes it to an output directory with headers found by splitting them into separate lines of text or","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"95d58a56-7e75-4ca1-a599-17856d67606f","created":{"value":"2024-02-20T08:22:20.232Z","readable":"23 hours ago"},"updated":{"value":"2024-02-20T08:22:20.232Z","readable":"23 hours ago"},"mechanism":"MANUAL","asset":{"id":"e79875c0-5f2f-43a7-89c4-6bdbc1d04767"},"type":"DESCRIPTION","text":"This snippet came from Template-Table.md on line 24"}],"updated":"2024-02-20T08:22:21.711Z"},{"title":"Markdown Snippet","id":"86ec5538-40af-4401-a846-b6e9c3210d6f","type":"CODE","raw":"Here's a revised version of your table with consistent placeholders for the creation date and improved clarity in descriptions and tags:\r\n\r\n| Template File                                      | Title                                     | Creation Date Placeholder     | Status                | Tags                                        | Description                                                                                                           |\r\n|----------------------------------------------------|-------------------------------------------|-------------------------------|-----------------------|---------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|\r\n| `Detailed_Book_Outline_Template.md`                | Detailed Book Outline                     | `{{creation_date}}`           | Planning              | `outline, book`                             | A template for planning the book's structure, including chapters, character profiles (for fiction), and research needs. |\r\n| `Chapter_Writing_Template.md`                      | Chapter X: [Title]                        | `{{creation_date}}`           | Drafting              | `chapter, draft`                            | A template for drafting individual chapters, detailing objectives, content sections, and tasks.                        |\r\n| `Comprehensive_Writing_Schedule.md`                | Comprehensive Writing Schedule            | `{{creation_date}}`           | Scheduled             | `schedule, writing`                         | A template for setting monthly goals, weekly focus areas, and daily targets for writing progress.                       |\r\n| `Expanded_Publishing_Checklist.md`                 | Expanded Publishing Checklist             | `{{creation_date}}`           | Pre-Publishing        | `checklist, publishing`                     | A template covering pre-publishing tasks, platform setups, and marketing and launch activities.                         |\r\n| `Marketing_Plan_with_Dataview.md`                  | Marketing Plan with Dataview              | `{{creation_date}}`           | Planning              | `marketing, plan`                           | A template outlining marketing objectives, audience analysis, key channels, timeline, milestones, and budget.           |\r\n| `Book_Idea_Validation_Checklist.md`                | Book Idea Validation Checklist            | `{{creation_date}}`           | Validation            | `validation, idea`                          | A checklist template to validate the book idea before proceeding with detailed planning and writing.                    |\r\n| `Feedback_Compilation.md`                          | Feedback Compilation                      | `{{creation_date}}`           | Compilation           | `feedback, compilation`                     | A template for compiling feedback from various sources for improvements and iterations.                                  |\r\n| `Competitor_Analysis.md`                           | Competitor Analysis                       | `{{creation_date}}`           | Analysis              | `competitor, analysis`                      | A template for analyzing competitors to identify market positioning and differentiation strategies.                      |\r\n| `Marketing_Strategy_Plan.md`                       | Marketing Strategy Plan                   | `{{creation_date}}`           | Planning              | `marketing, strategy`                       | A template for developing a comprehensive marketing strategy for the book.                                               |\r\n| `Metadata_Checklist.md`                            | Metadata Checklist                        | `{{creation_date}}`           | Checklist             | `metadata, checklist`                       | A checklist template ensuring all necessary metadata is included for book publishing and distribution.                   |\r\n| `Copyright_and_Legal_Checklist.md`                 | Copyright and Legal Checklist             | `{{creation_date}}`           | Legal                 | `copyright, legal`                          | A checklist template to navigate copyright and legal considerations for publishing.                                      |\r\n| `Direct_Publishing_Guide.md`                       | Direct Publishing Guide                   | `{{creation_date}}`           | Guide                 | `publishing, guide`                         | A guide template for direct publishing platforms and processes.                                                         |\r\n| `Research_Summary_Template.md`                     | Research Summary on {{Topic}}             | `{{creation_date}}`           | Research              | `research, {{topic}}`                       | A template for summarizing key research findings relevant to book chapters.                                             |\r\n| `Character_Profile_Template_for_Fiction.md`        | Character Profile: {{Character Name}}     | `{{creation_date}}`           | Character Development | `character, {{character_name}}`             | A template for developing detailed profiles of fictional characters, including background, traits, and arc.             |\r\n| `Editorial_Calendar_Template.md`                   | Editorial Calendar                        | `{{creation_date}}`           | Marketing             | `marketing, editorial, calendar`            | A template for planning marketing content, such as blog posts, social media updates, and newsletters.                   |\r\n| `Beta_Reader_Feedback_Form.md`                     | Beta Reader Feedback: {{Manuscript Title}}| `{{creation_date}}`           | Feedback              | `feedback, beta, {{manuscript_title}}`      | A template form to collect detailed feedback from beta readers on a manuscript.                                        |\r\n| `Launch_Plan_Template.md`                          | Launch Plan: {{Book Title}}               | `{{creation_date}}`           | Launch Planning       | `launch, marketing, {{book_title}}`         | A template for a strategic plan outlining pre-launch, launch day, and post-launch marketing and promotional activities.|\r\n\r\nThis revised table uses `{{creation_date}}` as a consistent placeholder for the creation date across all template files,\r\n\r\n which should be replaced with the actual creation date when the template is used. Additionally, placeholders within tags, such as `{{Topic}}`, `{{Character Name}}`, and `{{Manuscript Title}}`, are designed to be replaced with specific details relevant to the book project, ensuring dynamic and customized content management.","language":"md","time":"24 hours ago","created":"2024-02-20T07:36:13.211Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9b7dd4ae-d4f6-4a55-b517-8a915f14bb94","created":{"value":"2024-02-20T07:36:13.855Z","readable":"24 hours ago"},"updated":{"value":"2024-02-20T07:36:13.855Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"86ec5538-40af-4401-a846-b6e9c3210d6f"},"type":"DESCRIPTION","text":"This code snippet is a revised version of a table with consistent placeholders for creation date and improved clarity in descriptions. It includes template file, title, description, tags, etc., to display the book's structure including chapters, character profiles, content sections","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T14:17:12.519Z"},{"title":"Markdown Snippet","id":"c071390e-3a90-47c7-a8bd-f06e244b743c","type":"CODE","raw":"- #### Core Work #mcl/list-card\n    - [[00 Home|Main Goal 1]]\n    - [[00 Home|Main Goal 1]]\n    - [[00 Home|Main Goal 1]]\n    - [[00 Home|Main Goal 1]]\n- #### Learning & System\n    - [[00 Home|Learning Goal 1]]\n    - [[00 Home|Initiative 1]]\n    - [[00 Home|Initiative 2]]\n- #### Personal\n    - [[00 Home|Personal Goal 1]]\n    - [[00 Home|Personal Goal 2]]\n\n\n<button class=\"button-61\" role=\"button\">Button 61</button> \n\n---\n### Main Article\n> [!info|float-left]\n> Addition note to the main article\n\n> **Note on Editing in Live Preview**\n> In previous version of Float Image, editing text next to it was quite janky. I've improved it a bit (for `float-right` at least). For `float-left` you may still find selecting and navigating the text (up and down) still not possible.\n> To edit, it's better to navigate using keyboard (from the top or bottom) instead of mouse/trackpad. Even better, use Source Mode to edit.\n\n\n\n### Standard Multi-Column Callout\n\n> > [!multi-column]\n> >\n> >> [!note]+ Use Case\n> >> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n> >> ##### User Case Background\n> >> Vitae nunc sed velit dignissim sodales. In cursus turpis massa tincidunt dui ut ornare lectus.\n> >\n> >> [!warning]+ Resources\n> >> #### Requirement\n> >> - Lorem ipsum dolor sit amet\n> >> - Vitae nunc sed velit dignissim sodales.\n> >> - In cursus turpis massa tincidunt dui ut ornare lectus.\n> >\n> >> [!todo]+\n> >> - [x] Define Use Case\n> >> - [ ] Craft User Story\n> >> - [ ] Develop draft sketches\n\n\n---\n\n\n> [!multi-column]\n>> [!note]+ Use Case\n>> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n>> ##### User Case Background\n>> Vitae nunc sed velit dignissim sodales. In cursus turpis massa tincidunt dui ut ornare lectus.\n>\n>> [!warning]+ Resources\n>> #### Requirement\n>> - Lorem ipsum dolor sit amet\n>> - Vitae nunc sed velit dignissim sodales.\n>> - In cursus turpis massa tincidunt dui ut ornare lectus.\n>\n>> [!todo]+\n>> - [x] Define Use Case\n>> - [ ] Craft User Story\n>> - [ ] Develop draft sketches\n\n---\n\n> [!multi-column]\n> > [!Todo]+ Deliverables Milestone\n> > - [x] Insider's Alpha Release\n> > - [ ] Gold & Silver Supporters Meetup\n> > - [ ] Public Beta Release\n> \n> > [!Summary]+ Funding Milestone\n> > - Series A: $ 1.1 mil\n> > - Series B: ongoing\n> > - Series C: planned\n\n\n> [!multi-column]\n> \n> ```dataview\n> table without id file.link as \"Statistical Analysis\"\n> from \"sample data A\"\n> ```\n> \n> ```dataview\n> table without id file.link as \"Regression\"\n> from \"sample data B\"\n> ```\n> \n> ```dataview\n> table without id file.link as \"Model Validation\"\n> from \"sample data C\"\n> ```\n\n---\n\n> [!multi-column]\n>> [!NOTE]+ How to use?\n>> - To achieve this note layout, download `MCL Multi Column.css` to your snippets. It uses the following custom callout to achieve the look\n>> \t- `[!blank-container|right-medium]` - to float to the right\n>> \t- `[!multi-column]` with dataview code blocks inside - to achieve the three column dataview\n> \n>> [!Warning]+ Compatibility issue with some themes\n>> - The float does not work well with blockquotes and callout box formatting. It depends on the theme developer way of formatting them\n>>> Example here uses **Mado 11** theme by *hydescarf*. No changes made to theme (in term of color, formatting and decoration) other than the layout. MCL is meant to be used in tandem with most community theme.\n\n\n\n```dataview\ntable status, deadline\nfrom \"03-Chapters\"\nsort deadline asc\n```\n\n\n\n\n\n# Writing Dashboard\n\n## Chapter Overview\n\n```dataview\ntable status, deadline\nfrom \"03-Chapters\"\nsort deadline asc\n```\n\n\n\n\n<div class=\"button-row\">\n  <button class=\"button-61\" role=\"button\" onclick=\"DASHBOARD\"</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page2'\">Page 2</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page10'\">Page 10</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page11'\">Page 11</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page12'\">Page 12</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page20'\">Page 20</button>\n</div>\n<div class=\"button-row\">\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page1'\">Page 1</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page2'\">Page 2</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page10'\">Page 10</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page11'\">Page 11</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page12'\">Page 12</button>\n  <button class=\"button-61\" role=\"button\" onclick=\"window.location.href='obsidian://open?vault=YourVaultName&file=Page20'\">Page 20</button>\n</div>\n\n","language":"md","time":"a day ago","created":"2024-02-20T04:59:49.626Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"02dc963d-e204-48d4-bfb7-89f02132054e","created":{"value":"2024-02-20T04:59:49.626Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:59:49.626Z","readable":"a day ago"},"mechanism":"MANUAL","asset":{"id":"c071390e-3a90-47c7-a8bd-f06e244b743c"},"type":"DESCRIPTION","text":"This snippet came from Writing Dashboard.md on line 170"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e19c8b65-8fc5-46c2-a53f-b523a7e0c0b3","created":{"value":"2024-02-20T04:59:50.159Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:59:50.159Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"c071390e-3a90-47c7-a8bd-f06e244b743c"},"type":"DESCRIPTION","text":"The code snippet is a template for displaying the main article. It includes information such as display name, description, and date in live preview with various features like use case or user-case background to edit text on lorem ipsum dolor sit amet , consectetur adipiscing elit","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T06:55:11.317Z"},{"title":"Array to Map Conversion","id":"efbcce98-cb99-4a03-ab30-a2d39a89b460","type":"CODE","raw":"import org.jetbrains.annotations.NotNull;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic <T extends Map<String, Object>> Map<String, T> arrayToMap(@NotNull Array<T> array) {\n    Map<String, T> map = new HashMap<>();\n    for (T i : arr) {\n        map.put(i.get(\"id\"), i);\n    }\n}","language":"java","time":"a day ago","created":"2024-02-20T04:33:24.555Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6c90acab-30c1-4012-8533-54fd81e86ab9","created":{"value":"2024-02-20T04:33:28.828Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:33:28.828Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"efbcce98-cb99-4a03-ab30-a2d39a89b460"},"type":"DESCRIPTION","text":"This code snippet converts an array of objects into a map, using the \"id\" property of each object as the key and the object itself as the value.","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f928a2a3-4021-486b-bc81-a05e7de05608","created":{"value":"2024-02-20T04:33:24.931Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:33:24.931Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"efbcce98-cb99-4a03-ab30-a2d39a89b460"},"type":"DESCRIPTION","text":"This code snippet maps an array of objects into a Map object. It iterates through the array and stores each element with its ID as \"id\". The map is then returned to be stored in","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T04:33:28.874Z"},{"title":"User Table Schema with Timestamp Default Value","id":"c262906e-ec20-4a08-b1bf-caf7296ebb70","type":"CODE","raw":"CREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    email VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(50) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);","language":"sql","time":"a day ago","created":"2024-02-20T04:18:57.941Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6499d375-bf6c-4143-8039-ee1fecf1bea0","created":{"value":"2024-02-20T04:19:06.041Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:19:06.041Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"c262906e-ec20-4a08-b1bf-caf7296ebb70"},"type":"DESCRIPTION","text":"This SQL query creates a table named \"users\" with columns for id, username, email, password, and created_at, setting constraints for uniqueness and not null values.","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"adb07f8d-99da-4fca-b030-af38303d6d67","created":{"value":"2024-02-20T04:18:58.315Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:18:58.315Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"c262906e-ec20-4a08-b1bf-caf7296ebb70"},"type":"DESCRIPTION","text":"This code snippet creates a table called \"users\" with columns for id, username, email, password, and created_at. It also sets the creation time to current timestamp in seconds of this SQL statement.","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T04:19:06.069Z"},{"title":"Basic Express Server Setup","id":"006b1296-6ec6-4bd4-9690-0e5a29fbee1d","type":"CODE","raw":"const express = require('express');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.get('/', (req, res) => {\n  res.send('Hello World!');\n});\n\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","language":"js","time":"a day ago","created":"2024-02-20T04:18:55.318Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1b0cf57a-26f6-406b-b45f-2e666c80c21e","created":{"value":"2024-02-20T04:18:55.782Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:18:55.782Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"006b1296-6ec6-4bd4-9690-0e5a29fbee1d"},"type":"DESCRIPTION","text":"This code sets up an Express server that listens on port 3000 and sends a message \"Hello World!\" when the root URL is located.","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"922e632f-727a-4352-b6b2-8f870b2eccbb","created":{"value":"2024-02-20T04:18:59.855Z","readable":"a day ago"},"updated":{"value":"2024-02-20T04:18:59.855Z","readable":"a day ago"},"mechanism":"AUTOMATIC","asset":{"id":"006b1296-6ec6-4bd4-9690-0e5a29fbee1d"},"type":"DESCRIPTION","text":"This script creates a simple web server using Express that listens on a specified port (either from an environment variable or defaulting to 3000) and responds with \"Hello World!\" when a GET request is made to the root URL.","model":{"id":"a474a0d2-39bc-48b2-8c4f-824b2a12f4c4"}}],"updated":"2024-02-20T04:18:59.883Z"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"llmModelId":"","directives":[]}